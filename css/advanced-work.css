/* 
  Targets the <model-viewer> element with the 'artwork-model' class.
  Sets a minimum height to ensure the 3D model viewer is visually prominent.
  Uses 60vh (60% of viewport height) for desktop, and 40vh for smaller screens.
  'width: 100%' ensures it fills its container horizontally.
*/
.artwork-model {
  width: 100%;
  min-height: 400px; /* Ensures reasonable height on all screens */
  height: 100%; /* Allows stretching in flex layouts */
  background: #f5f5f5; /* Light background for contrast */
  border-radius: 8px; /* Softens corners for a modern look */
  box-shadow: 0 2px 12px rgba(0,0,0,0.08); /* Subtle shadow for depth */
  display: block; /* Ensures block-level sizing */
}

/* 
  Responsive adjustment for mobile/tablet screens.
  Reduces the minimum height to fit smaller displays.
  The breakpoint is set at 1024px as per requirements.
*/
@media (max-width: 1024px) {
  .artwork-model {
    min-height: 250px; /* Shorter but still visible on mobile/tablet */
  }
}

/*
  Ensures the left column (model viewer) stretches to fit available height.
  Uses flex layout for vertical stretching.
*/
.work-model-col {
  display: flex;           /* Enables flexbox for child alignment */
  flex-direction: column;  /* Stacks children vertically */
  justify-content: center; /* Centers model vertically if extra space */
  height: 100%;            /* Fills parent container */
}

/*
  Hides the fallback <p> inside <model-viewer> when the component is supported.
  The <model-viewer> element is upgraded to a custom element, so the fallback
  content is not needed and should be hidden to avoid double messages.
  Uses the :defined pseudo-class to target only when <model-viewer> is active.
*/
model-viewer:defined > p {
  display: none !important;
}

/* ...existing code for layout, columns, and other elements... */
